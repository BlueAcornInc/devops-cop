#!/usr/bin/env node
/**
 * to - copyright(c) 2012 openmason.
 * MIT Licensed
 */

var program = require('commander');
var to = require('..');
var handy = require('handy');

var doc = "",
    stdIn = process.stdin,
    _versionString = 'to v'+to.version,
    inputformat, outputformat,
    inputString;

program
    .version(_versionString)
    .option('-i, --input <input>', 'Input file')
    .option('-o, --output <output>', 'Output file')
    .option('-from, --from <format>', 'Test help for input format')
    .option('-to, --to <format>', 'Test help for output format (stdout is used)')
    .parse(process.argv);

inputformat = handy.getFileExtension(program.input, 'json');
outputformat = handy.getFileExtension(program.output, 'json');

if (program.input) {
    console.log("==== option parser ====");

    if (!process.argv.slice(2).length) {
        program.outputHelp();
        process.exit(1);
    }

    // validate formats
    if(!to.isValidFormat(inputformat) || !to.isValidFormat(outputformat)) {
        program.outputHelp();
        console.log('*** do not know how to process format:'+(to.isValidFormat(inputformat)?outputformat:inputformat));
        process.exit(1);
    }

    // convert yml to yaml
    outputformat = outputformat=='yml'?'yaml':outputformat;

    // load appropriate format
    doc=to.load(program.input);

    console.log(to.format[outputformat].stringify(doc));

} else {
    console.log("==== STDIN ====");

    stdIn.on('data', (chunk) => {
        doc += chunk.toString();
    });

    stdIn.on('end', () => {
        console.log(doc);
        console.log(doc.length);
    });
}